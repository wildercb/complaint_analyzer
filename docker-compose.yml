version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: complaints
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  aggregator:
    build:
      context: .
      dockerfile: ./aggregator/Dockerfile
    command: aggregator
    depends_on:
      - postgres
      - elasticsearch
      - redis
    environment:
      - POSTGRES_DB=complaints
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
    volumes:
      - ./google-service-account.json:/app/google-credentials.json
      - ./agents:/app/agents
    ports:
      - "5000:5000"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  rq_worker:
    build:
      context: .
      dockerfile: ./aggregator/Dockerfile
    command: worker
    depends_on:
      - redis
      - postgres
      - elasticsearch
    environment:
      - PYTHONPATH=/app
      - POSTGRES_DB=complaints
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - REDIS_HOST=redis
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
    volumes:
      - ./google-service-account.json:/app/google-credentials.json
      - ./agents:/app/agents



  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000

volumes:
  postgres_data:
  elasticsearch_data: